{"version":3,"file":"tw-table.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/tw_classnames.ts","../src/components/TableRow/index.tsx","../src/components/Input/Input.tsx","../src/components/TableFilter/index.tsx","../src/icons/ChevronLeft.tsx","../src/icons/ChevronRight.tsx","../src/icons/ChevronUp.tsx","../src/icons/ChevronDown.tsx","../src/icons/MagnifyingGlass.tsx","../src/icons/index.tsx","../src/components/TableHead/index.tsx","../src/components/Pagination/fragments/PageControls.tsx","../src/components/Pagination/fragments/PageSizeControls.tsx","../src/components/Pagination/fragments/Info.tsx","../src/components/Pagination/index.tsx","../src/components/Table.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export const MOBILE_TABLE_HEAD_CLASSNAMES = {'card': \"border-none h-px m-negative-1 overflow-hidden p-0 absolute sm:static w-px\", \"scroll\": \"\"}\r\nexport const MOBILE_TABLE_ROW_CLASSNAMES = {'card': \"border sm:border-none block sm:table-row mb-2.5 sm:mb-0\", \"scroll\": \"\"}\r\nexport const MOBILE_TABLE_DESCRIPTION_CLASSNAMES={'card': \"border-b flex justify-between items-center sm:table-cell text-right sm:text-left before:content-[attr(data-label)] sm:before:content-[''] before:float-left sm:before:float-none before:font-bold sm:before:font-normal\", \"scroll\": \"\"}\r\n","import React from 'react';\r\nimport { Row, flexRender } from '@tanstack/react-table';\r\nimport { ResponsivenessType, Selection } from '../../components/types';\r\nimport clsx from 'clsx';\r\nimport { MOBILE_TABLE_DESCRIPTION_CLASSNAMES, MOBILE_TABLE_ROW_CLASSNAMES } from '../tw_classnames';\r\n\r\ntype Props<TData> = {\r\n  row: Row<TData>;\r\n  selection?: Selection;\r\n  responsivenessType?: ResponsivenessType;\r\n};\r\n\r\nconst TableRow = <TData extends object>({ row, selection, responsivenessType }: Props<TData>) => {\r\n  console.log('row', row);\r\n  return ( \r\n    <tr\r\n      className={clsx(\r\n        'border-gray-200',\r\n        selection && row.getIsSelected() && 'bg-sky-100',\r\n        responsivenessType && MOBILE_TABLE_ROW_CLASSNAMES[responsivenessType]\r\n      )}\r\n    >\r\n      {row.getVisibleCells().map((cell, idx: number) => (\r\n        <td\r\n          key={cell.id}\r\n          data-label={cell.column.columnDef.header}\r\n          className={clsx(\"px-3.5 py-2 min-w-48 h-14 whitespace-nowrap\", responsivenessType && MOBILE_TABLE_DESCRIPTION_CLASSNAMES[responsivenessType])}\r\n        >\r\n          {idx === 0 && selection && (\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"mr-2\"\r\n              checked={row.getIsSelected()}\r\n              disabled={!row.getCanSelect()}\r\n              onChange={row.getToggleSelectedHandler()}\r\n            />\r\n          )}\r\n          {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport { useState, useEffect, useRef, forwardRef, ComponentProps } from 'react';\r\n\r\ninterface Props extends ComponentProps<'input'> {\r\n  className?: string;\r\n  isLoading?: boolean;\r\n  errorMsg?: string;\r\n}\r\n\r\nconst Input = forwardRef<HTMLInputElement, Props>(\r\n  (\r\n    {\r\n      id,\r\n      type,\r\n      placeholder,\r\n      defaultValue = '',\r\n      required = false,\r\n      onChange,\r\n      isLoading = false,\r\n      onKeyDown,\r\n      autoFocus = false,\r\n    },\r\n    refProp,\r\n  ) => {\r\n    const localRef = useRef<HTMLInputElement>(null);\r\n    const ref = refProp || localRef;\r\n\r\n    const [inputValue, setInputValue] = useState<\r\n      string | number | readonly string[]\r\n    >(defaultValue);\r\n\r\n    useEffect(() => {\r\n      setInputValue(defaultValue);\r\n    }, [defaultValue]);\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <input\r\n          className='block w-full px-3 py-2 border-2 border-gray-300 rounded-md skeleton'\r\n          disabled\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n        <input\r\n          id={id}\r\n          name={id}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          autoComplete={id}\r\n          value={inputValue}\r\n          required={required}\r\n          className='block w-full px-3 py-2 placeholder-gray-400 border-2 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-sky-500 focus:border-sky-500 sm:text-sm'\r\n          onChange={(e) => {\r\n            setInputValue(e.target.value);\r\n            onChange && onChange(e);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            onKeyDown && onKeyDown(e);\r\n          }}\r\n          ref={ref}\r\n          autoFocus={autoFocus}\r\n        />\r\n    );\r\n  },\r\n);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { Column } from '@tanstack/react-table';\r\nimport Input from '../../components/Input';\r\n\r\n// Define an extended type for ColumnMeta that includes filterVariant\r\ninterface ExtendedColumnMeta {\r\n  filterVariant?: 'range' | 'select' | 'text';\r\n}\r\n\r\nexport default function TableFilter<TData>({\r\n  column,\r\n}: {\r\n  column: Column<TData, unknown>;\r\n}) {\r\n  const columnFilterValue = column.getFilterValue() as string;\r\n  const { filterVariant } = (column.columnDef.meta as ExtendedColumnMeta) ?? {};\r\n\r\n  return filterVariant === 'range' ? (\r\n    <div>\r\n      <p>not implemented lol</p>\r\n    </div>\r\n  ) : filterVariant === 'select' ? (\r\n    <select\r\n      onChange={(e) => column.setFilterValue(e.target.value)}\r\n      value={columnFilterValue?.toString()}\r\n    >\r\n      <option value=\"\">not implemented lol</option>\r\n    </select>\r\n  ) : (\r\n    <Input\r\n      className=\"border-none animate-scale-x\"\r\n      onChange={(e) => {\r\n        column.setFilterValue(e.target.value) \r\n      }}\r\n      placeholder={`${column.columnDef.header}...`}\r\n      type=\"text\"\r\n      value={(columnFilterValue ?? '') as string}\r\n      autoFocus={true}\r\n    />\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst ChevronLeft = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronLeft","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst ChevronRight = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronRight","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\nconst ChevronUp = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 15.75 7.5-7.5 7.5 7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronUp","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst ChevronDown = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m19.5 8.25-7.5 7.5-7.5-7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronDown","import React from 'react'\r\n\r\ntype Props = {\r\n    className?: string;\r\n}\r\n\r\nconst MagnifyingGlass = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default MagnifyingGlass","import React from \"react\";\r\n\r\n// import {default as ChevronLeftIcon} from \"./chevron-left-icon.svg\";\r\n// import {default as ChevronRightIcon} from \"./chevron-right-icon.svg\";\r\n// import {default as ChevronUpIcon} from \"./chevron-up-icon.svg\";\r\n// import {default as ChevronDownIcon} from \"./chevron-down-icon.svg\";\r\n// import {default as MagnifyingGlassIcon} from \"./magnifying-glass-icon.svg\";\r\nimport {default as ChevronLeftIcon} from \"./ChevronLeft\";\r\nimport {default as ChevronRightIcon} from \"./ChevronRight\";\r\nimport {default as ChevronUpIcon} from \"./ChevronUp\";\r\nimport {default as ChevronDownIcon} from \"./ChevronDown\";\r\nimport {default as MagnifyingGlassIcon} from \"./MagnifyingGlass\";\r\n\r\n\r\ntype IconProps = {\r\n  name: \"chevron-right\" | \"chevron-left\" | \"chevron-up\" | 'chevron-down' | 'magnifying-glass';\r\n  className?: string;\r\n};\r\n\r\nconst Icon = (props: IconProps) => {\r\n  const { name, ...svgProps } = props;\r\n\r\n  const icons: Record<IconProps[\"name\"], any> = {\r\n    \"chevron-left\": <ChevronLeftIcon {...svgProps} />,\r\n    'chevron-right': <ChevronRightIcon {...svgProps} />,\r\n    'chevron-up': <ChevronUpIcon {...svgProps} />,\r\n    'chevron-down': <ChevronDownIcon {...svgProps} />,\r\n    'magnifying-glass': <MagnifyingGlassIcon {...svgProps} />,\r\n  };\r\n\r\n  return icons[name];\r\n};\r\n\r\nexport default Icon;","import React, { useState } from 'react';\r\nimport { flexRender, HeaderGroup } from '@tanstack/react-table';\r\nimport TableFilter from '../TableFilter';\r\nimport Icon from '../../icons';\r\nimport clsx from 'clsx';\r\nimport { MOBILE_TABLE_ROW_CLASSNAMES } from '../tw_classnames';\r\nimport { ResponsivenessType } from '../types';\r\n\r\ntype Props<TData> = {\r\n  headerGroup: HeaderGroup<TData>;\r\n  responsivenessType?: ResponsivenessType;\r\n};\r\n\r\nconst TableHead = <TData extends object>({ headerGroup }: Props<TData>) => {\r\n  const [targetSearchCol, setTargetSearchCol] = useState<string | null>(null);\r\n\r\n  return (\r\n    <tr key={headerGroup.id} className={clsx(\"w-full\", MOBILE_TABLE_ROW_CLASSNAMES)}>\r\n      {headerGroup.headers.map((header) => (\r\n        <th\r\n          key={header.id}\r\n          className=\"px-3.5 py-2 text-left min-w-48 max-w-48 h-14\"\r\n          onBlur={() => { \r\n            if(header.column.getFilterValue()) return\r\n            setTargetSearchCol(null)\r\n          }}\r\n          scope='col'\r\n        >\r\n          {targetSearchCol !== header.id && (\r\n            <div className=\"flex justify-between items-center\">\r\n              {flexRender(header.column.columnDef.header, header.getContext())}\r\n\r\n              <div className=\"flex space-x-2\">\r\n                {header.column.getCanFilter() && (\r\n                  <button\r\n                    className=\"p-2 rounded-full shadow-md hover:bg-gray-100\"\r\n                    onClick={() =>\r\n                      header.column.getCanFilter() &&\r\n                      setTargetSearchCol(header.id)\r\n                    }\r\n                  >\r\n                    <Icon name=\"magnifying-glass\" className=\"h-3 w-3\" />\r\n                  </button>\r\n                )}\r\n\r\n                {header.column.getCanSort() && (\r\n                  <div className=\"flex flex-col\">\r\n                    <button\r\n                      className=\"p-2 rounded-full shadow-md hover:bg-gray-100\"\r\n                      onClick={() => header.column.toggleSorting()}\r\n                    >\r\n                      {header.column.getIsSorted() === 'desc' ? (\r\n                        <Icon name=\"chevron-down\" className=\"h-3 w-3\" />\r\n                      ) : (\r\n                        <Icon name=\"chevron-up\" className=\"h-3 w-3\" />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {targetSearchCol === header.id && header.column.getCanFilter() && (\r\n            <TableFilter column={header.column} />\r\n          )}\r\n        </th>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableHead;\r\n","import React from 'react'\r\nimport Icon from '../../../icons'\r\nimport { SharedProps } from './types'\r\n\r\nconst PageControls = ({table}: SharedProps) => {\r\n  return (\r\n    <>\r\n        <button\r\n            className=\"flex px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.firstPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n        >\r\n            <Icon name=\"chevron-left\" className=\"h-3 w-3\" />\r\n            <Icon name=\"chevron-left\" className=\"h-3 w-3\" />\r\n        </button>\r\n        <button\r\n            className=\"px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.previousPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n        >\r\n            <Icon name=\"chevron-left\" className=\"h-3 w-3\" />\r\n        </button>\r\n        <button\r\n            className=\"px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.nextPage()}\r\n            disabled={!table.getCanNextPage()}\r\n        >\r\n            <Icon name=\"chevron-right\" className=\"h-3 w-3\" />\r\n        </button>\r\n        <button\r\n            className=\"flex px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.lastPage()}\r\n            disabled={!table.getCanNextPage()}\r\n        >\r\n            <Icon name=\"chevron-right\" className=\"h-3 w-3\" />\r\n            <Icon name=\"chevron-right\" className=\"h-3 w-3\" />\r\n        </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PageControls","import React from 'react'\r\nimport { SharedProps } from './types'\r\n\r\nconst PageSizeControls = ({table}: SharedProps) => {\r\n  return (\r\n    <div className=\"space-x-2\">\r\n        <span>Show</span>\r\n        <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={e => {\r\n                table.setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"border rounded px-2 py-1 bg-white text-sm\"\r\n        >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                    {pageSize}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageSizeControls","import React from 'react'\r\nimport { SharedProps } from './types'\r\n\r\nconst Info = ({table}: SharedProps) => {\r\n  return (\r\n    <div className=\"flex justify-between\">\r\n        <div className=\"text-sm text-gray-600\">\r\n            Showing {table.getRowModel().rows.length.toLocaleString()} of{' '}\r\n            {table.getRowCount().toLocaleString()} Rows\r\n        </div>\r\n        <div>\r\n            <span className=\"flex items-center gap-1 text-sm\">\r\n                <div>Page</div>\r\n                <strong>\r\n                    {table.getState().pagination.pageIndex + 1} of{' '}\r\n                    {table.getPageCount().toLocaleString()}\r\n                </strong>\r\n            </span>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info","import { Table } from '@tanstack/react-table'\r\nimport React from 'react'\r\nimport PageControls from './fragments/PageControls'\r\nimport PageSizeControls from './fragments/PageSizeControls'\r\nimport Info from './fragments/Info'\r\n\r\ntype Props = {\r\n    table: Table<any>\r\n}\r\n\r\nconst Pagination = ({ table }: Props) => {\r\n    return (\r\n        <div className=\"py-2\">\r\n            <div className=\"flex items-center justify-between gap-4 mb-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <PageControls table={table} />\r\n                </div>\r\n\r\n                <PageSizeControls table={table} />\r\n            </div>\r\n\r\n            <Info table={table} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react';\r\nimport {\r\n  getCoreRowModel,\r\n  useReactTable,\r\n  ColumnDef,\r\n  getFilteredRowModel,\r\n  getSortedRowModel,\r\n  getPaginationRowModel,\r\n  ColumnFiltersState,\r\n  SortingState,\r\n  PaginationState,\r\n} from '@tanstack/react-table';\r\nimport TableRow from './TableRow';\r\nimport TableHead from './TableHead';\r\nimport Pagination from './Pagination';\r\nimport clsx from 'clsx';\r\nimport { MOBILE_TABLE_HEAD_CLASSNAMES } from './tw_classnames';\r\nimport { ResponsivenessType } from './types';\r\n\r\n\r\nexport interface TableProps<TData> {\r\n  columns: ColumnDef<TData, unknown>[];\r\n  data: TData[];\r\n  serverSide?: boolean \r\n  responsivenessType?: ResponsivenessType // I'll add more options in the future.\r\n};\r\n\r\nexport const Table = <TData extends object>({\r\n  columns,\r\n  data,\r\n  responsivenessType = \"card\",\r\n  // serverSide = false\r\n}: TableProps<TData>) => {\r\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\r\n    []\r\n  )\r\n  const [sorting, setSorting] = React.useState<SortingState>([])\r\n  const [pagination, setPagination] = React.useState<PaginationState>({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n  })\r\n  const table = useReactTable({\r\n    columns,\r\n    data,\r\n    filterFns: {}, // devs can pass advanced filter functions here\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(), // client side filtering\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    onSortingChange: setSorting,\r\n    onPaginationChange: setPagination,\r\n    state: {\r\n      sorting,\r\n      pagination, \r\n      columnFilters,\r\n    },\r\n    enableSortingRemoval: false,\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-col flex-end\">\r\n      <div className=\"overflow-x-auto\">\r\n        <div className=\"shadow overflow-x-auto border-b border-gray-200 sm:rounded-lg\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className={clsx(\"bg-gray-50 border\", responsivenessType && MOBILE_TABLE_HEAD_CLASSNAMES[responsivenessType])}>\r\n              {table.getHeaderGroups().map((headerGroup) => (\r\n                <TableHead key={headerGroup.id} headerGroup={headerGroup} responsivenessType={responsivenessType}/>\r\n              ))}\r\n            </thead>\r\n\r\n            <tbody>\r\n              {table.getRowModel().rows.length ? (\r\n                table\r\n                  .getRowModel()\r\n                  .rows.map((row) => (\r\n                    <TableRow key={row.id} row={row} responsivenessType={responsivenessType} />\r\n                  ))\r\n              ) : (\r\n                <tr className=\"text-center h-32\">\r\n                  <td colSpan={12}>Empty</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {pagination && (\r\n        <Pagination\r\n          table={table}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","MOBILE_TABLE_HEAD_CLASSNAMES","card","scroll","MOBILE_TABLE_ROW_CLASSNAMES","MOBILE_TABLE_DESCRIPTION_CLASSNAMES","TableRow","_ref","row","selection","responsivenessType","console","log","React","className","clsx","getIsSelected","getVisibleCells","map","cell","idx","key","id","column","columnDef","header","checked","disabled","getCanSelect","onChange","getToggleSelectedHandler","flexRender","getContext","Input","forwardRef","refProp","placeholder","_ref$defaultValue","defaultValue","_ref$required","required","_ref$isLoading","isLoading","onKeyDown","_ref$autoFocus","autoFocus","localRef","useRef","_useState","useState","inputValue","setInputValue","useEffect","name","autoComplete","value","e","target","TableFilter","columnFilterValue","getFilterValue","filterVariant","_column$columnDef$met","meta","setFilterValue","toString","ChevronLeft","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","ChevronRight","ChevronUp","ChevronDown","MagnifyingGlass","Icon","props","svgProps","_objectWithoutPropertiesLoose","_excluded","chevron-left","ChevronLeftIcon","chevron-right","ChevronRightIcon","chevron-up","ChevronUpIcon","chevron-down","ChevronDownIcon","magnifying-glass","MagnifyingGlassIcon","TableHead","headerGroup","targetSearchCol","setTargetSearchCol","headers","onBlur","scope","getCanFilter","onClick","getCanSort","toggleSorting","getIsSorted","PageControls","table","firstPage","getCanPreviousPage","previousPage","nextPage","getCanNextPage","lastPage","PageSizeControls","getState","pagination","pageSize","setPageSize","Number","Info","getRowModel","rows","length","toLocaleString","getRowCount","pageIndex","getPageCount","Pagination","columns","data","_ref$responsivenessTy","_React$useState","columnFilters","setColumnFilters","_React$useState2","sorting","setSorting","_React$useState3","setPagination","useReactTable","filterFns","onColumnFiltersChange","getCoreRowModel","getFilteredRowModel","getSortedRowModel","getPaginationRowModel","onSortingChange","onPaginationChange","state","enableSortingRemoval","getHeaderGroups","colSpan"],"mappings":"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"}