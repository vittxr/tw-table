{"version":3,"file":"tw-table.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/icons/ChevronLeft.tsx","../src/icons/ChevronRight.tsx","../src/icons/ChevronUp.tsx","../src/icons/ChevronDown.tsx","../src/icons/MagnifyingGlass.tsx","../src/icons/index.tsx","../src/components/Pagination/fragments/PageControls.tsx","../src/components/Pagination/fragments/PageSizeControls.tsx","../src/components/Pagination/fragments/Info.tsx","../src/components/Pagination/index.tsx","../src/components/Input/Input.tsx","../src/components/TableFilter/index.tsx","../src/components/TableRow/index.tsx","../src/components/TableHead/index.tsx","../src/Table.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst ChevronLeft = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronLeft","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst ChevronRight = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronRight","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\nconst ChevronUp = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 15.75 7.5-7.5 7.5 7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronUp","import React from 'react'\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst ChevronDown = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m19.5 8.25-7.5 7.5-7.5-7.5\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ChevronDown","import React from 'react'\r\n\r\ntype Props = {\r\n    className?: string;\r\n}\r\n\r\nconst MagnifyingGlass = ({className}: Props) => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={className}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default MagnifyingGlass","import React from \"react\";\r\n\r\n// import {default as ChevronLeftIcon} from \"./chevron-left-icon.svg\";\r\n// import {default as ChevronRightIcon} from \"./chevron-right-icon.svg\";\r\n// import {default as ChevronUpIcon} from \"./chevron-up-icon.svg\";\r\n// import {default as ChevronDownIcon} from \"./chevron-down-icon.svg\";\r\n// import {default as MagnifyingGlassIcon} from \"./magnifying-glass-icon.svg\";\r\nimport {default as ChevronLeftIcon} from \"./ChevronLeft\";\r\nimport {default as ChevronRightIcon} from \"./ChevronRight\";\r\nimport {default as ChevronUpIcon} from \"./ChevronUp\";\r\nimport {default as ChevronDownIcon} from \"./ChevronDown\";\r\nimport {default as MagnifyingGlassIcon} from \"./MagnifyingGlass\";\r\n\r\n\r\ntype IconProps = {\r\n  name: \"chevron-right\" | \"chevron-left\" | \"chevron-up\" | 'chevron-down' | 'magnifying-glass';\r\n  className?: string;\r\n};\r\n\r\nconst Icon = (props: IconProps) => {\r\n  const { name, ...svgProps } = props;\r\n\r\n  const icons: Record<IconProps[\"name\"], any> = {\r\n    \"chevron-left\": <ChevronLeftIcon {...svgProps} />,\r\n    'chevron-right': <ChevronRightIcon {...svgProps} />,\r\n    'chevron-up': <ChevronUpIcon {...svgProps} />,\r\n    'chevron-down': <ChevronDownIcon {...svgProps} />,\r\n    'magnifying-glass': <MagnifyingGlassIcon {...svgProps} />,\r\n  };\r\n\r\n  return icons[name];\r\n};\r\n\r\nexport default Icon;","import React from 'react'\r\nimport Icon from '../../../icons'\r\nimport { SharedProps } from './types'\r\n\r\nconst PageControls = ({table}: SharedProps) => {\r\n  return (\r\n    <>\r\n        <button\r\n            className=\"flex px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.firstPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n        >\r\n            <Icon name=\"chevron-left\" className=\"h-3 w-3\" />\r\n            <Icon name=\"chevron-left\" className=\"h-3 w-3\" />\r\n        </button>\r\n        <button\r\n            className=\"px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.previousPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n        >\r\n            <Icon name=\"chevron-left\" className=\"h-3 w-3\" />\r\n        </button>\r\n        <button\r\n            className=\"px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.nextPage()}\r\n            disabled={!table.getCanNextPage()}\r\n        >\r\n            <Icon name=\"chevron-right\" className=\"h-3 w-3\" />\r\n        </button>\r\n        <button\r\n            className=\"flex px-3 py-1 border rounded-full bg-gray-50 hover:bg-gray-100 disabled:bg-gray-200 disabled:cursor-not-allowed\"\r\n            onClick={() => table.lastPage()}\r\n            disabled={!table.getCanNextPage()}\r\n        >\r\n            <Icon name=\"chevron-right\" className=\"h-3 w-3\" />\r\n            <Icon name=\"chevron-right\" className=\"h-3 w-3\" />\r\n        </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PageControls","import React from 'react'\r\nimport { SharedProps } from './types'\r\n\r\nconst PageSizeControls = ({table}: SharedProps) => {\r\n  return (\r\n    <div className=\"space-x-2\">\r\n        <span>Show</span>\r\n        <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={e => {\r\n                table.setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"border rounded px-2 py-1 bg-white text-sm\"\r\n        >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                    {pageSize}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageSizeControls","import React from 'react'\r\nimport { SharedProps } from './types'\r\n\r\nconst Info = ({table}: SharedProps) => {\r\n  return (\r\n    <div className=\"flex justify-between\">\r\n        <div className=\"text-sm text-gray-600\">\r\n            Showing {table.getRowModel().rows.length.toLocaleString()} of{' '}\r\n            {table.getRowCount().toLocaleString()} Rows\r\n        </div>\r\n        <div>\r\n            <span className=\"flex items-center gap-1 text-sm\">\r\n                <div>Page</div>\r\n                <strong>\r\n                    {table.getState().pagination.pageIndex + 1} of{' '}\r\n                    {table.getPageCount().toLocaleString()}\r\n                </strong>\r\n            </span>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info","import { Table } from '@tanstack/react-table'\r\nimport React from 'react'\r\nimport PageControls from './fragments/PageControls'\r\nimport PageSizeControls from './fragments/PageSizeControls'\r\nimport Info from './fragments/Info'\r\n\r\ntype Props = {\r\n    table: Table<any>\r\n}\r\n\r\nconst Pagination = ({ table }: Props) => {\r\n    return (\r\n        <div className=\"py-2\">\r\n            <div className=\"flex items-center justify-between gap-4 mb-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <PageControls table={table} />\r\n                </div>\r\n\r\n                <PageSizeControls table={table} />\r\n            </div>\r\n\r\n            <Info table={table} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react';\r\nimport { useState, useEffect, useRef, forwardRef, ComponentProps } from 'react';\r\n\r\ninterface Props extends ComponentProps<'input'> {\r\n  // id: string;\r\n  // type: HTMLInputTypeAttribute;\r\n  // placeholder: string;\r\n  // defaultValue?: string;\r\n  // required?: boolean;\r\n  className?: string;\r\n  // onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  isLoading?: boolean;\r\n  errorMsg?: string;\r\n  // onKeyDown?: (e: KeyboardEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst Input = forwardRef<HTMLInputElement, Props>(\r\n  (\r\n    {\r\n      id,\r\n      type,\r\n      placeholder,\r\n      defaultValue = '',\r\n      required = false,\r\n      onChange,\r\n      isLoading = false,\r\n      onKeyDown,\r\n      autoFocus = false,\r\n    },\r\n    refProp,\r\n  ) => {\r\n    const localRef = useRef<HTMLInputElement>(null);\r\n    const ref = refProp || localRef;\r\n\r\n    const [inputValue, setInputValue] = useState<\r\n      string | number | readonly string[]\r\n    >(defaultValue);\r\n\r\n    useEffect(() => {\r\n      setInputValue(defaultValue);\r\n    }, [defaultValue]);\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <input\r\n          className='block w-full px-3 py-2 border-2 border-gray-300 rounded-md skeleton'\r\n          disabled\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n        <input\r\n          id={id}\r\n          name={id}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          autoComplete={id}\r\n          value={inputValue}\r\n          required={required}\r\n          className='block w-full px-3 py-2 placeholder-gray-400 border-2 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-sky-500 focus:border-sky-500 sm:text-sm'\r\n          onChange={(e) => {\r\n            setInputValue(e.target.value);\r\n            onChange && onChange(e);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            onKeyDown && onKeyDown(e);\r\n          }}\r\n          ref={ref}\r\n          autoFocus={autoFocus}\r\n        />\r\n    );\r\n  },\r\n);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { Column } from '@tanstack/react-table';\r\nimport Input from '../../components/Input';\r\n\r\n// Define an extended type for ColumnMeta that includes filterVariant\r\ninterface ExtendedColumnMeta {\r\n  filterVariant?: 'range' | 'select' | 'text';\r\n}\r\n\r\nexport default function TableFilter<TData>({\r\n  column,\r\n}: {\r\n  column: Column<TData, unknown>;\r\n}) {\r\n  const columnFilterValue = column.getFilterValue() as string;\r\n  const { filterVariant } = (column.columnDef.meta as ExtendedColumnMeta) ?? {};\r\n\r\n  return filterVariant === 'range' ? (\r\n    <div>\r\n      <p>not implemented lol</p>\r\n    </div>\r\n  ) : filterVariant === 'select' ? (\r\n    <select\r\n      onChange={(e) => column.setFilterValue(e.target.value)}\r\n      value={columnFilterValue?.toString()}\r\n    >\r\n      <option value=\"\">not implemented lol</option>\r\n    </select>\r\n  ) : (\r\n    <Input\r\n      className=\"border-none animate-scale-x\"\r\n      onChange={(e) => {\r\n        column.setFilterValue(e.target.value) \r\n      }}\r\n      placeholder={`${column.columnDef.header}...`}\r\n      type=\"text\"\r\n      value={(columnFilterValue ?? '') as string}\r\n      autoFocus={true}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, flexRender } from '@tanstack/react-table';\r\nimport { Selection } from '../../components/types';\r\nimport clsx from 'clsx';\r\n\r\ntype Props<TData> = {\r\n  row: Row<TData>;\r\n  selection?: Selection;\r\n};\r\n\r\nconst TableRow = <TData extends object>({ row, selection }: Props<TData>) => {\r\n  return (\r\n    <tr\r\n      className={clsx(\r\n        'border border-gray-200 hover:bg-gray-100',\r\n        selection && row.getIsSelected() && 'bg-sky-100',\r\n      )}\r\n    >\r\n      {row.getVisibleCells().map((cell, idx: number) => (\r\n        <td\r\n          key={cell.id}\r\n          className=\"px-3.5 py-2 min-w-48 h-14 whitespace-nowrap\"\r\n        >\r\n          {idx === 0 && selection && (\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"mr-2\"\r\n              checked={row.getIsSelected()}\r\n              disabled={!row.getCanSelect()}\r\n              onChange={row.getToggleSelectedHandler()}\r\n            />\r\n          )}\r\n          {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React, { useState } from 'react';\r\nimport { flexRender, HeaderGroup } from '@tanstack/react-table';\r\nimport TableFilter from '../TableFilter';\r\nimport Icon from '../../icons';\r\n\r\ntype Props<TData> = {\r\n  headerGroup: HeaderGroup<TData>;\r\n};\r\n\r\nconst TableHead = <TData extends object>({ headerGroup }: Props<TData>) => {\r\n  const [targetSearchCol, setTargetSearchCol] = useState<string | null>(null);\r\n\r\n  return (\r\n    <tr key={headerGroup.id} className=\"w-full\">\r\n      {headerGroup.headers.map((header) => (\r\n        <th\r\n          key={header.id}\r\n          className=\"px-3.5 py-2 text-left min-w-48 max-w-48 h-14\"\r\n          onBlur={() => { \r\n            if(header.column.getFilterValue()) return\r\n            setTargetSearchCol(null)\r\n          }}\r\n        >\r\n          {targetSearchCol !== header.id && (\r\n            <div className=\"flex justify-between items-center\">\r\n              {flexRender(header.column.columnDef.header, header.getContext())}\r\n\r\n              <div className=\"flex space-x-2\">\r\n                {header.column.getCanFilter() && (\r\n                  <button\r\n                    className=\"p-2 rounded-full shadow-md hover:bg-gray-100\"\r\n                    onClick={() =>\r\n                      header.column.getCanFilter() &&\r\n                      setTargetSearchCol(header.id)\r\n                    }\r\n                  >\r\n                    <Icon name=\"magnifying-glass\" className=\"h-3 w-3\" />\r\n                  </button>\r\n                )}\r\n\r\n                {header.column.getCanSort() && (\r\n                  <div className=\"flex flex-col\">\r\n                    <button\r\n                      className=\"p-2 rounded-full shadow-md hover:bg-gray-100\"\r\n                      onClick={() => header.column.toggleSorting()}\r\n                    >\r\n                      {header.column.getIsSorted() === 'desc' ? (\r\n                        <Icon name=\"chevron-down\" className=\"h-3 w-3\" />\r\n                      ) : (\r\n                        <Icon name=\"chevron-up\" className=\"h-3 w-3\" />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {targetSearchCol === header.id && header.column.getCanFilter() && (\r\n            <TableFilter column={header.column} />\r\n          )}\r\n        </th>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableHead;\r\n","import React from 'react';\r\nimport './index.css'\r\nimport {\r\n  getCoreRowModel,\r\n  useReactTable,\r\n  ColumnDef,\r\n  getFilteredRowModel,\r\n  getSortedRowModel,\r\n  getPaginationRowModel,\r\n  ColumnFiltersState,\r\n  SortingState,\r\n  PaginationState,\r\n} from '@tanstack/react-table';\r\nimport { TableRow, TableHead, Pagination } from './components/';\r\n\r\n\r\ntype Props<TData> = {\r\n  columns: ColumnDef<TData, unknown>[];\r\n  data: TData[];\r\n  serverSide?: boolean\r\n};\r\n\r\nconst Table = <TData extends object>({\r\n  columns,\r\n  data,\r\n  // serverSide = false\r\n}: Props<TData>) => {\r\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\r\n    []\r\n  )\r\n  const [sorting, setSorting] = React.useState<SortingState>([])\r\n  const [pagination, setPagination] = React.useState<PaginationState>({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n  })\r\n  const table = useReactTable({\r\n    columns,\r\n    data,\r\n    filterFns: {}, // devs can pass advanced filter functions here\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(), // client side filtering\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    onSortingChange: setSorting,\r\n    onPaginationChange: setPagination,\r\n    state: {\r\n      sorting,\r\n      pagination, \r\n      columnFilters,\r\n    },\r\n    enableSortingRemoval: false,\r\n  });\r\n\r\n  console.log('sorting', sorting)\r\n\r\n  return (\r\n    <div className=\"flex flex-col flex-end\">\r\n      <div className=\"overflow-x-auto\">\r\n        <div className=\"shadow overflow-x-auto border-b border-gray-200 sm:rounded-lg\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50 border\">\r\n              {table.getHeaderGroups().map((headerGroup) => (\r\n                <TableHead key={headerGroup.id} headerGroup={headerGroup} />\r\n              ))}\r\n            </thead>\r\n\r\n            <tbody>\r\n              {table.getRowModel().rows.length ? (\r\n                table\r\n                  .getRowModel()\r\n                  .rows.map((row) => (\r\n                    <TableRow key={row.id} row={row}  />\r\n                  ))\r\n              ) : (\r\n                <tr className=\"text-center h-32\">\r\n                  <td colSpan={12}>Empty</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {pagination && (\r\n        <Pagination\r\n          table={table}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ChevronLeft","_ref","React","xmlns","fill","viewBox","strokeWidth","stroke","className","strokeLinecap","strokeLinejoin","d","ChevronRight","ChevronUp","ChevronDown","MagnifyingGlass","Icon","props","name","svgProps","_objectWithoutPropertiesLoose","_excluded","chevron-left","ChevronLeftIcon","chevron-right","ChevronRightIcon","chevron-up","ChevronUpIcon","chevron-down","ChevronDownIcon","magnifying-glass","MagnifyingGlassIcon","PageControls","table","onClick","firstPage","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","lastPage","PageSizeControls","value","getState","pagination","pageSize","onChange","e","setPageSize","Number","target","map","key","Info","getRowModel","rows","length","toLocaleString","getRowCount","pageIndex","getPageCount","Pagination","Input","forwardRef","refProp","id","placeholder","_ref$defaultValue","defaultValue","_ref$required","required","_ref$isLoading","isLoading","onKeyDown","_ref$autoFocus","autoFocus","localRef","useRef","_useState","useState","inputValue","setInputValue","useEffect","autoComplete","TableFilter","column","columnFilterValue","getFilterValue","filterVariant","_column$columnDef$met","columnDef","meta","setFilterValue","toString","header","TableRow","row","selection","clsx","getIsSelected","getVisibleCells","cell","idx","checked","getCanSelect","getToggleSelectedHandler","flexRender","getContext","TableHead","headerGroup","targetSearchCol","setTargetSearchCol","headers","onBlur","getCanFilter","getCanSort","toggleSorting","getIsSorted","columns","data","_React$useState","columnFilters","setColumnFilters","_React$useState2","sorting","setSorting","_React$useState3","setPagination","useReactTable","filterFns","onColumnFiltersChange","getCoreRowModel","getFilteredRowModel","getSortedRowModel","getPaginationRowModel","onSortingChange","onPaginationChange","state","enableSortingRemoval","console","log","getHeaderGroups","colSpan"],"mappings":"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"}